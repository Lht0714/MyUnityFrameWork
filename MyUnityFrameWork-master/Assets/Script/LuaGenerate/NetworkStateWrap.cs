//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NetworkStateWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(NetworkState));
		L.RegVar("Connected", get_Connected, null);
		L.RegVar("Connecting", get_Connecting, null);
		L.RegVar("ConnectBreak", get_ConnectBreak, null);
		L.RegVar("FaildToConnect", get_FaildToConnect, null);
		L.RegVar("NetworkError", get_NetworkError, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Connected(IntPtr L)
	{
		ToLua.Push(L, NetworkState.Connected);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Connecting(IntPtr L)
	{
		ToLua.Push(L, NetworkState.Connecting);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ConnectBreak(IntPtr L)
	{
		ToLua.Push(L, NetworkState.ConnectBreak);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FaildToConnect(IntPtr L)
	{
		ToLua.Push(L, NetworkState.FaildToConnect);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NetworkError(IntPtr L)
	{
		ToLua.Push(L, NetworkState.NetworkError);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		NetworkState o = (NetworkState)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

