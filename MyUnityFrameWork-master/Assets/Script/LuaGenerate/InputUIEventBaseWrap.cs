//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class InputUIEventBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(InputUIEventBase), typeof(IInputEventBase));
		L.RegFunction("GetEventKey", GetEventKey);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_name", get_m_name, set_m_name);
		L.RegVar("m_compName", get_m_compName, set_m_compName);
		L.RegVar("m_type", get_m_type, set_m_type);
		L.RegVar("m_pram", get_m_pram, set_m_pram);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetEventKey(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			InputUIEventType arg2 = (InputUIEventType)ToLua.CheckObject(L, 3, typeof(InputUIEventType));
			string arg3 = ToLua.CheckString(L, 4);
			string o = InputUIEventBase.GetEventKey(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			string ret = obj.m_name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_compName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			string ret = obj.m_compName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_compName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_type(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			InputUIEventType ret = obj.m_type;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_type on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_pram(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			string ret = obj.m_pram;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pram on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_name on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_compName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_compName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_compName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_type(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			InputUIEventType arg0 = (InputUIEventType)ToLua.CheckObject(L, 2, typeof(InputUIEventType));
			obj.m_type = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_type on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_pram(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			InputUIEventBase obj = (InputUIEventBase)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.m_pram = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pram on a nil value" : e.Message);
		}
	}
}

