//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IInputEventBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IInputEventBase), typeof(System.Object));
		L.RegFunction("Reset", Reset);
		L.RegFunction("Serialize", Serialize);
		L.RegFunction("Analysis", Analysis);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_t", get_m_t, set_m_t);
		L.RegVar("EventKey", get_EventKey, set_EventKey);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			IInputEventBase obj = (IInputEventBase)ToLua.CheckObject(L, 1, typeof(IInputEventBase));
			obj.Reset();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Serialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			IInputEventBase obj = (IInputEventBase)ToLua.CheckObject(L, 1, typeof(IInputEventBase));
			string o = obj.Serialize();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Analysis(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IInputEventBase obj = (IInputEventBase)ToLua.CheckObject(L, 1, typeof(IInputEventBase));
			string arg0 = ToLua.CheckString(L, 2);
			IInputEventBase o = obj.Analysis(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_t(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IInputEventBase obj = (IInputEventBase)o;
			float ret = obj.m_t;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_t on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EventKey(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IInputEventBase obj = (IInputEventBase)o;
			string ret = obj.EventKey;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EventKey on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_t(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IInputEventBase obj = (IInputEventBase)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_t = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_t on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EventKey(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			IInputEventBase obj = (IInputEventBase)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.EventKey = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EventKey on a nil value" : e.Message);
		}
	}
}

