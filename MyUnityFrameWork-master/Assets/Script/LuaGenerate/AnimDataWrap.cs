//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AnimDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AnimData), typeof(System.Object));
		L.RegFunction("ExecuteUpdate", ExecuteUpdate);
		L.RegFunction("ExecuteCallBack", ExecuteCallBack);
		L.RegFunction("AnimReplayLogic", AnimReplayLogic);
		L.RegFunction("ExchangeV2", ExchangeV2);
		L.RegFunction("ExchangePos", ExchangePos);
		L.RegFunction("ExchangeAlpha", ExchangeAlpha);
		L.RegFunction("Init", Init);
		L.RegFunction("OnInit", OnInit);
		L.RegFunction("CustomMethodFloat", CustomMethodFloat);
		L.RegFunction("CustomMethodVector2", CustomMethodVector2);
		L.RegFunction("CustomMethodVector3", CustomMethodVector3);
		L.RegFunction("CustomMethodVector4", CustomMethodVector4);
		L.RegFunction("BezierInit", BezierInit);
		L.RegFunction("UguiAlphaInit", UguiAlphaInit);
		L.RegFunction("SetUGUIAlpha", SetUGUIAlpha);
		L.RegFunction("UguiColorInit", UguiColorInit);
		L.RegFunction("UguiPositionInit", UguiPositionInit);
		L.RegFunction("TransfromInit", TransfromInit);
		L.RegFunction("AlphaInit", AlphaInit);
		L.RegFunction("SetAlpha", SetAlpha);
		L.RegFunction("ColorInit", ColorInit);
		L.RegFunction("SetColor", SetColor);
		L.RegFunction("InBack", InBack);
		L.RegFunction("OutBack", OutBack);
		L.RegFunction("InOutBack", InOutBack);
		L.RegFunction("OutInBack", OutInBack);
		L.RegFunction("InQuad", InQuad);
		L.RegFunction("OutQuad", OutQuad);
		L.RegFunction("InoutQuad", InoutQuad);
		L.RegFunction("InCubic", InCubic);
		L.RegFunction("OutCubic", OutCubic);
		L.RegFunction("InoutCubic", InoutCubic);
		L.RegFunction("OutinCubic", OutinCubic);
		L.RegFunction("InQuart", InQuart);
		L.RegFunction("OutQuart", OutQuart);
		L.RegFunction("InOutQuart", InOutQuart);
		L.RegFunction("OutInQuart", OutInQuart);
		L.RegFunction("InQuint", InQuint);
		L.RegFunction("OutQuint", OutQuint);
		L.RegFunction("InOutQuint", InOutQuint);
		L.RegFunction("OutInQuint", OutInQuint);
		L.RegFunction("InSine", InSine);
		L.RegFunction("OutSine", OutSine);
		L.RegFunction("InOutSine", InOutSine);
		L.RegFunction("OutInSine", OutInSine);
		L.RegFunction("InExpo", InExpo);
		L.RegFunction("OutExpo", OutExpo);
		L.RegFunction("InOutExpo", InOutExpo);
		L.RegFunction("OutInExpo", OutInExpo);
		L.RegFunction("OutBounce", OutBounce);
		L.RegFunction("InBounce", InBounce);
		L.RegFunction("InOutBounce", InOutBounce);
		L.RegFunction("OutInBounce", OutInBounce);
		L.RegFunction("ShowDebug", ShowDebug);
		L.RegFunction("New", _CreateAnimData);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_animGameObejct", get_m_animGameObejct, set_m_animGameObejct);
		L.RegVar("m_animType", get_m_animType, set_m_animType);
		L.RegVar("m_interpolationType", get_m_interpolationType, set_m_interpolationType);
		L.RegVar("m_pathType", get_m_pathType, set_m_pathType);
		L.RegVar("m_repeatType", get_m_repeatType, set_m_repeatType);
		L.RegVar("m_ignoreTimeScale", get_m_ignoreTimeScale, set_m_ignoreTimeScale);
		L.RegVar("m_delayTime", get_m_delayTime, set_m_delayTime);
		L.RegVar("m_isDone", get_m_isDone, set_m_isDone);
		L.RegVar("m_currentTime", get_m_currentTime, set_m_currentTime);
		L.RegVar("m_totalTime", get_m_totalTime, set_m_totalTime);
		L.RegVar("m_repeatCount", get_m_repeatCount, set_m_repeatCount);
		L.RegVar("m_fromQ4", get_m_fromQ4, set_m_fromQ4);
		L.RegVar("m_toQ4", get_m_toQ4, set_m_toQ4);
		L.RegVar("m_fromV4", get_m_fromV4, set_m_fromV4);
		L.RegVar("m_toV4", get_m_toV4, set_m_toV4);
		L.RegVar("m_fromV3", get_m_fromV3, set_m_fromV3);
		L.RegVar("m_toV3", get_m_toV3, set_m_toV3);
		L.RegVar("m_fromV2", get_m_fromV2, set_m_fromV2);
		L.RegVar("m_toV2", get_m_toV2, set_m_toV2);
		L.RegVar("m_fromFloat", get_m_fromFloat, set_m_fromFloat);
		L.RegVar("m_toFloat", get_m_toFloat, set_m_toFloat);
		L.RegVar("m_toTransform", get_m_toTransform, set_m_toTransform);
		L.RegVar("m_fromColor", get_m_fromColor, set_m_fromColor);
		L.RegVar("m_toColor", get_m_toColor, set_m_toColor);
		L.RegVar("m_parameter", get_m_parameter, set_m_parameter);
		L.RegVar("m_callBack", get_m_callBack, set_m_callBack);
		L.RegVar("m_space", get_m_space, set_m_space);
		L.RegVar("m_isChild", get_m_isChild, set_m_isChild);
		L.RegVar("m_isLocal", get_m_isLocal, set_m_isLocal);
		L.RegVar("m_v3Contral", get_m_v3Contral, set_m_v3Contral);
		L.RegVar("m_floatContral", get_m_floatContral, set_m_floatContral);
		L.RegVar("m_customMethodV4", get_m_customMethodV4, set_m_customMethodV4);
		L.RegVar("m_customMethodV3", get_m_customMethodV3, set_m_customMethodV3);
		L.RegVar("m_customMethodV2", get_m_customMethodV2, set_m_customMethodV2);
		L.RegVar("m_customMethodFloat", get_m_customMethodFloat, set_m_customMethodFloat);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateAnimData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				AnimData obj = new AnimData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: AnimData.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			bool o = obj.ExecuteUpdate();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExecuteCallBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.ExecuteCallBack();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AnimReplayLogic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			bool o = obj.AnimReplayLogic();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExchangeV2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.ExchangeV2();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExchangePos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.ExchangePos();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExchangeAlpha(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.ExchangeAlpha();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.OnInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CustomMethodFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.CustomMethodFloat();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CustomMethodVector2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.CustomMethodVector2();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CustomMethodVector3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.CustomMethodVector3();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CustomMethodVector4(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.CustomMethodVector4();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BezierInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.BezierInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UguiAlphaInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.UguiAlphaInit(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUGUIAlpha(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetUGUIAlpha(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UguiColorInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.UguiColorInit(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UguiPositionInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.UguiPositionInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TransfromInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.TransfromInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AlphaInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AlphaInit(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAlpha(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetAlpha(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ColorInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ColorInit(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			UnityEngine.Color arg0 = (UnityEngine.Color)ToLua.CheckObject(L, 2, typeof(UnityEngine.Color));
			obj.SetColor(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InBack(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			float o = obj.OutBack(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InOutBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			float o = obj.InOutBack(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutInBack(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			float o = obj.OutInBack(arg0, arg1, arg2, arg3, arg4);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InQuad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InQuad(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutQuad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutQuad(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InoutQuad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InoutQuad(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InCubic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InCubic(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutCubic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutCubic(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InoutCubic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InoutCubic(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutinCubic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutinCubic(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InQuart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InQuart(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutQuart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutQuart(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InOutQuart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InOutQuart(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutInQuart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutInQuart(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InQuint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InQuint(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutQuint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutQuint(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InOutQuint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InOutQuint(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutInQuint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutInQuint(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InSine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InSine(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutSine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutSine(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InOutSine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InOutSine(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutInSine(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutInSine(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InExpo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InExpo(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutExpo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutExpo(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InOutExpo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InOutExpo(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutInExpo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutInExpo(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutBounce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutBounce(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InBounce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InBounce(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InOutBounce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.InOutBounce(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OutInBounce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float o = obj.OutInBounce(arg0, arg1, arg2, arg3);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowDebug(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			AnimData obj = (AnimData)ToLua.CheckObject(L, 1, typeof(AnimData));
			obj.ShowDebug();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_animGameObejct(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.GameObject ret = obj.m_animGameObejct;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_animGameObejct on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_animType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimType ret = obj.m_animType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_animType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_interpolationType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			InterpType ret = obj.m_interpolationType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_interpolationType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_pathType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			PathType ret = obj.m_pathType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pathType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_repeatType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			RepeatType ret = obj.m_repeatType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_repeatType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_ignoreTimeScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool ret = obj.m_ignoreTimeScale;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_ignoreTimeScale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_delayTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float ret = obj.m_delayTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_delayTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_isDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool ret = obj.m_isDone;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_isDone on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_currentTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float ret = obj.m_currentTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_currentTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_totalTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float ret = obj.m_totalTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_totalTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_repeatCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			int ret = obj.m_repeatCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_repeatCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fromQ4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Quaternion ret = obj.m_fromQ4;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromQ4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toQ4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Quaternion ret = obj.m_toQ4;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toQ4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fromV4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector4 ret = obj.m_fromV4;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromV4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toV4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector4 ret = obj.m_toV4;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toV4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fromV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector3 ret = obj.m_fromV3;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector3 ret = obj.m_toV3;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fromV2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector2 ret = obj.m_fromV2;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromV2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toV2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector2 ret = obj.m_toV2;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toV2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fromFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float ret = obj.m_fromFloat;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromFloat on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float ret = obj.m_toFloat;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toFloat on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Transform ret = obj.m_toTransform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toTransform on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fromColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Color ret = obj.m_fromColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromColor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_toColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Color ret = obj.m_toColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toColor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_parameter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			object[] ret = obj.m_parameter;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_parameter on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_callBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCallBack ret = obj.m_callBack;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_callBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_space(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float ret = obj.m_space;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_space on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_isChild(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool ret = obj.m_isChild;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_isChild on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_isLocal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool ret = obj.m_isLocal;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_isLocal on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_v3Contral(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector3[] ret = obj.m_v3Contral;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_v3Contral on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_floatContral(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float[] ret = obj.m_floatContral;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_floatContral on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_customMethodV4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodVector4 ret = obj.m_customMethodV4;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodV4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_customMethodV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodVector3 ret = obj.m_customMethodV3;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_customMethodV2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodVector2 ret = obj.m_customMethodV2;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodV2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_customMethodFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodFloat ret = obj.m_customMethodFloat;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodFloat on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_animGameObejct(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_animGameObejct = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_animGameObejct on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_animType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimType arg0 = (AnimType)ToLua.CheckObject(L, 2, typeof(AnimType));
			obj.m_animType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_animType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_interpolationType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			InterpType arg0 = (InterpType)ToLua.CheckObject(L, 2, typeof(InterpType));
			obj.m_interpolationType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_interpolationType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_pathType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			PathType arg0 = (PathType)ToLua.CheckObject(L, 2, typeof(PathType));
			obj.m_pathType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_pathType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_repeatType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			RepeatType arg0 = (RepeatType)ToLua.CheckObject(L, 2, typeof(RepeatType));
			obj.m_repeatType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_repeatType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_ignoreTimeScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_ignoreTimeScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_ignoreTimeScale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_delayTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_delayTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_delayTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_isDone(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_isDone = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_isDone on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_currentTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_currentTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_currentTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_totalTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_totalTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_totalTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_repeatCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_repeatCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_repeatCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fromQ4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Quaternion arg0 = (UnityEngine.Quaternion)ToLua.CheckObject(L, 2, typeof(UnityEngine.Quaternion));
			obj.m_fromQ4 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromQ4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toQ4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Quaternion arg0 = (UnityEngine.Quaternion)ToLua.CheckObject(L, 2, typeof(UnityEngine.Quaternion));
			obj.m_toQ4 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toQ4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fromV4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector4 arg0 = (UnityEngine.Vector4)ToLua.CheckObject(L, 2, typeof(UnityEngine.Vector4));
			obj.m_fromV4 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromV4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toV4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector4 arg0 = (UnityEngine.Vector4)ToLua.CheckObject(L, 2, typeof(UnityEngine.Vector4));
			obj.m_toV4 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toV4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fromV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)ToLua.CheckObject(L, 2, typeof(UnityEngine.Vector3));
			obj.m_fromV3 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector3 arg0 = (UnityEngine.Vector3)ToLua.CheckObject(L, 2, typeof(UnityEngine.Vector3));
			obj.m_toV3 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fromV2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)ToLua.CheckObject(L, 2, typeof(UnityEngine.Vector2));
			obj.m_fromV2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromV2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toV2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector2 arg0 = (UnityEngine.Vector2)ToLua.CheckObject(L, 2, typeof(UnityEngine.Vector2));
			obj.m_toV2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toV2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fromFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_fromFloat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromFloat on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_toFloat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toFloat on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.m_toTransform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toTransform on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fromColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Color arg0 = (UnityEngine.Color)ToLua.CheckObject(L, 2, typeof(UnityEngine.Color));
			obj.m_fromColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fromColor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_toColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Color arg0 = (UnityEngine.Color)ToLua.CheckObject(L, 2, typeof(UnityEngine.Color));
			obj.m_toColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_toColor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_parameter(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			object[] arg0 = ToLua.CheckObjectArray(L, 2);
			obj.m_parameter = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_parameter on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_callBack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AnimCallBack)ToLua.CheckObject(L, 2, typeof(AnimCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AnimCallBack), func) as AnimCallBack;
			}

			obj.m_callBack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_callBack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_space(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_space = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_space on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_isChild(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_isChild = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_isChild on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_isLocal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_isLocal = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_isLocal on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_v3Contral(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			UnityEngine.Vector3[] arg0 = ToLua.CheckObjectArray<UnityEngine.Vector3>(L, 2);
			obj.m_v3Contral = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_v3Contral on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_floatContral(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			float[] arg0 = ToLua.CheckNumberArray<float>(L, 2);
			obj.m_floatContral = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_floatContral on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_customMethodV4(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodVector4 arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AnimCustomMethodVector4)ToLua.CheckObject(L, 2, typeof(AnimCustomMethodVector4));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AnimCustomMethodVector4), func) as AnimCustomMethodVector4;
			}

			obj.m_customMethodV4 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodV4 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_customMethodV3(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodVector3 arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AnimCustomMethodVector3)ToLua.CheckObject(L, 2, typeof(AnimCustomMethodVector3));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AnimCustomMethodVector3), func) as AnimCustomMethodVector3;
			}

			obj.m_customMethodV3 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodV3 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_customMethodV2(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodVector2 arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AnimCustomMethodVector2)ToLua.CheckObject(L, 2, typeof(AnimCustomMethodVector2));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AnimCustomMethodVector2), func) as AnimCustomMethodVector2;
			}

			obj.m_customMethodV2 = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodV2 on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_customMethodFloat(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AnimData obj = (AnimData)o;
			AnimCustomMethodFloat arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (AnimCustomMethodFloat)ToLua.CheckObject(L, 2, typeof(AnimCustomMethodFloat));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(AnimCustomMethodFloat), func) as AnimCustomMethodFloat;
			}

			obj.m_customMethodFloat = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_customMethodFloat on a nil value" : e.Message);
		}
	}
}

