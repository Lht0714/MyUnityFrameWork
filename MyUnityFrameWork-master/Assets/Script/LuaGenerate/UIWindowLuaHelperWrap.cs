//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIWindowLuaHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIWindowLuaHelper), typeof(UIWindowBase));
		L.RegFunction("OnInit", OnInit);
		L.RegFunction("OnOpen", OnOpen);
		L.RegFunction("OnShow", OnShow);
		L.RegFunction("OnHide", OnHide);
		L.RegFunction("EnterAnim", EnterAnim);
		L.RegFunction("OnCompleteEnterAnim", OnCompleteEnterAnim);
		L.RegFunction("OnRefresh", OnRefresh);
		L.RegFunction("OnClose", OnClose);
		L.RegFunction("ExitAnim", ExitAnim);
		L.RegFunction("OnCompleteExitAnim", OnCompleteExitAnim);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnOpen(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnOpen();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnShow();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnHide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnHide();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EnterAnim(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			UIAnimCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (UIAnimCallBack)ToLua.CheckObject(L, 2, typeof(UIAnimCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(UIAnimCallBack), func) as UIAnimCallBack;
			}

			UICallBack arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (UICallBack)ToLua.CheckObject(L, 3, typeof(UICallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(UICallBack), func) as UICallBack;
			}

			object[] arg2 = ToLua.ToParamsObject(L, 4, count - 3);
			System.Collections.IEnumerator o = obj.EnterAnim(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCompleteEnterAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnCompleteEnterAnim();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnRefresh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnRefresh();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnClose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ExitAnim(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			UIAnimCallBack arg0 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg0 = (UIAnimCallBack)ToLua.CheckObject(L, 2, typeof(UIAnimCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg0 = DelegateFactory.CreateDelegate(typeof(UIAnimCallBack), func) as UIAnimCallBack;
			}

			UICallBack arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (UICallBack)ToLua.CheckObject(L, 3, typeof(UICallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(UICallBack), func) as UICallBack;
			}

			object[] arg2 = ToLua.ToParamsObject(L, 4, count - 3);
			System.Collections.IEnumerator o = obj.ExitAnim(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCompleteExitAnim(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIWindowLuaHelper obj = (UIWindowLuaHelper)ToLua.CheckObject(L, 1, typeof(UIWindowLuaHelper));
			obj.OnCompleteExitAnim();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

