//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UISystemEventWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UISystemEvent), typeof(System.Object));
		L.RegFunction("RegisterAllUIEvent", RegisterAllUIEvent);
		L.RegFunction("RemoveAllUIEvent", RemoveAllUIEvent);
		L.RegFunction("RegisterEvent", RegisterEvent);
		L.RegFunction("RemoveEvent", RemoveEvent);
		L.RegFunction("Dispatch", Dispatch);
		L.RegFunction("New", _CreateUISystemEvent);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("s_allUIEvents", get_s_allUIEvents, set_s_allUIEvents);
		L.RegVar("s_singleUIEvents", get_s_singleUIEvents, set_s_singleUIEvents);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUISystemEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UISystemEvent obj = new UISystemEvent();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UISystemEvent.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterAllUIEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIEvent arg0 = (UIEvent)ToLua.CheckObject(L, 1, typeof(UIEvent));
			UICallBack arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (UICallBack)ToLua.CheckObject(L, 2, typeof(UICallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(UICallBack), func) as UICallBack;
			}

			UISystemEvent.RegisterAllUIEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllUIEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIEvent arg0 = (UIEvent)ToLua.CheckObject(L, 1, typeof(UIEvent));
			UICallBack arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (UICallBack)ToLua.CheckObject(L, 2, typeof(UICallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(UICallBack), func) as UICallBack;
			}

			UISystemEvent.RemoveAllUIEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			UIEvent arg1 = (UIEvent)ToLua.CheckObject(L, 2, typeof(UIEvent));
			UICallBack arg2 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (UICallBack)ToLua.CheckObject(L, 3, typeof(UICallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg2 = DelegateFactory.CreateDelegate(typeof(UICallBack), func) as UICallBack;
			}

			UISystemEvent.RegisterEvent(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			UIEvent arg1 = (UIEvent)ToLua.CheckObject(L, 2, typeof(UIEvent));
			UICallBack arg2 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (UICallBack)ToLua.CheckObject(L, 3, typeof(UICallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg2 = DelegateFactory.CreateDelegate(typeof(UICallBack), func) as UICallBack;
			}

			UISystemEvent.RemoveEvent(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispatch(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			UIWindowBase arg0 = (UIWindowBase)ToLua.CheckUnityObject(L, 1, typeof(UIWindowBase));
			UIEvent arg1 = (UIEvent)ToLua.CheckObject(L, 2, typeof(UIEvent));
			object[] arg2 = ToLua.ToParamsObject(L, 3, count - 2);
			UISystemEvent.Dispatch(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_s_allUIEvents(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, UISystemEvent.s_allUIEvents);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_s_singleUIEvents(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, UISystemEvent.s_singleUIEvents);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_s_allUIEvents(IntPtr L)
	{
		try
		{
			System.Collections.Generic.Dictionary<UIEvent,UICallBack> arg0 = (System.Collections.Generic.Dictionary<UIEvent,UICallBack>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<UIEvent,UICallBack>));
			UISystemEvent.s_allUIEvents = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_s_singleUIEvents(IntPtr L)
	{
		try
		{
			System.Collections.Generic.Dictionary<string,System.Collections.Generic.Dictionary<UIEvent,UICallBack>> arg0 = (System.Collections.Generic.Dictionary<string,System.Collections.Generic.Dictionary<UIEvent,UICallBack>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,System.Collections.Generic.Dictionary<UIEvent,UICallBack>>));
			UISystemEvent.s_singleUIEvents = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

